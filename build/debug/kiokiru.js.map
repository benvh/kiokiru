{"version":3,"sources":["webpack://Kiokiru/webpack/universalModuleDefinition","webpack://Kiokiru/webpack/bootstrap","webpack://Kiokiru/./src/decorators/level-decorator.ts","webpack://Kiokiru/./src/decorators/message-decorator.ts","webpack://Kiokiru/./src/ilogger.ts","webpack://Kiokiru/./src/index.ts","webpack://Kiokiru/./src/log-event-decorator.ts","webpack://Kiokiru/./src/logger-pipeline.ts","webpack://Kiokiru/./src/logger.ts","webpack://Kiokiru/./src/stages/filter-stage.ts","webpack://Kiokiru/./src/stages/message-formatter-stage.ts","webpack://Kiokiru/./src/stages/sink-stage.ts","webpack://Kiokiru/./src/time-formatter.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;;;;;;;;;;;;;;;AAGb,8GAA2D;AAE3D;;GAEG;AACH;IAA4C,0CAAiB;IAIzD,gCAAY,KAAgB,EAAE,KAAe;QAA7C,YACI,kBAAM,KAAK,CAAC,SAEf;QADG,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;IAC/B,CAAC;IAED,sCAAK,GAAL;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IACL,6BAAC;AAAD,CAAC,CAZ2C,uCAAiB,GAY5D;AAZY,wDAAsB;AAcnC;;GAEG;AACH;IAA+C,6CAAiB;IAK5D,mCAAY,KAAgB,EAAE,KAAe,EAAE,SAA6B;QAA5E,YACI,kBAAM,KAAK,CAAC,SAGf;QAFG,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,KAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;;IACvC,CAAC;IAED,yCAAK,GAAL;QACI,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC,aAAa,CAAC;QAClE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAEL,gCAAC;AAAD,CAAC,CAhB8C,uCAAiB,GAgB/D;AAhBY,8DAAyB;;;;;;;;;;;;;ACzBzB;;;;;;;;;;;;;;;AAEb,8GAA2D;AAQ3D;IAA4C,0CAAiB;IAIzD,gCAAY,KAAgB,EAAE,cAA8B;QAA5D,YACI,kBAAM,KAAK,CAAC,SAEf;QADG,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;IACzC,CAAC;IAED,wCAAO,GAAP;QACI,OAAO,KAAG,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAI,CAAC;IAC7D,CAAC;IACL,6BAAC;AAAD,CAAC,CAZ2C,uCAAiB,GAY5D;AAZY,wDAAsB;AAenC;IAA4C,0CAAiB;IAIzD,gCAAY,KAAgB,EAAE,cAA8B;QAA5D,YACI,kBAAM,KAAK,CAAC,SAEf;QADG,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;IACzC,CAAC;IAED,wCAAO,GAAP;QACI,OAAO,KAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,cAAc,EAAI,CAAC;IAC7D,CAAC;IAEL,6BAAC;AAAD,CAAC,CAb2C,uCAAiB,GAa5D;AAbY,wDAAsB;AAenC;IAAkD,gDAAiB;IAAnE;;IAoBA,CAAC;IAlBG,8CAAO,GAAP;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACpC,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,aAAa,GAAG,YAAY,CAAC;QAEjC,IAAM,aAAa,GAAG,cAAc,CAAC;QACrC,IAAI,KAAK,GAAoB,IAAI,CAAC;QAElC,OAAM,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,EAAE;YACtD,IAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACrC,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBACjC,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;aAC5E;SACJ;QAED,OAAO,aAAa,CAAC;IACzB,CAAC;IAEL,mCAAC;AAAD,CAAC,CApBiD,uCAAiB,GAoBlE;AApBY,oEAA4B;;;;;;;;;;;;;ACxC7B;;AAEZ,IAAY,QAMX;AAND,WAAY,QAAQ;IAChB,yCAAK;IACL,uCAAI;IACJ,uCAAI;IACJ,yCAAK;IACL,yCAAK;AACT,CAAC,EANW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAMnB;;;;;;;;;;;;;ACRY;;;;;AAEb,mEAA0B;AAC1B,mFAAkC;AAClC,iEAAyB;AAEzB,uFAAoC;AACpC,iHAAiD;AACjD,2FAAsC;AAEtC,6GAA+C;AAC/C,yGAA6C;;;;;;;;;;;;;ACXhC;;AAIb;IAGI,2BAAY,KAAgB;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,qCAAS,GAAT;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAClC,CAAC;IAED,mCAAO,GAAP;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAED,iCAAK,GAAL;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,gCAAI,GAAJ;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IACL,wBAAC;AAAD,CAAC;AAtBqB,8CAAiB;;;;;;;;;;;;;ACJ1B;;AAQb;IAAA;QACY,WAAM,GAAqB,EAAE,CAAC;IAiB1C,CAAC;IAfG,iCAAQ,GAAR,UAAS,KAAqB;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,gCAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CACrB,UAAS,GAAG,EAAE,SAAS;YACnB,OAAO,GAAG,CAAC,IAAI,CAAC,UAAC,SAAS;gBACtB,IAAI,SAAS,IAAI,IAAI;oBAAE,OAAO,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,EACD,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAC5B,CAAC;IACN,CAAC;IACL,qBAAC;AAAD,CAAC;AAlBY,wCAAc;;;;;;;;;;;;;ACRf;;AAEZ,yEAA4F;AAC5F,iGAAmE;AAGnE,uIAA8G;AAC9G,sGAAkF;AAGlF;;GAEG;AACH;IAOI,kBAAY,SAAiB,EAAE,OAAe,EAAE,KAAe,EAAE,IAAmB;QAChF,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,4BAAS,GAAT;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,0BAAO,GAAP;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,wBAAK,GAAL;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,uBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACL,eAAC;AAAD,CAAC;AA7BY,4BAAQ;AA+BrB;;;;;;GAMG;AACH;IAII,gBAAY,QAAwB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,wBAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAM,eAAQ,EAAR,CAAQ,CAAC,CAAC;IAChE,CAAC;IAED,sBAAK,GAAL,UAAM,OAAe,EAAE,IAAwB;QAAxB,gCAAwB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,kBAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAE,CAAC;IAC7G,CAAC;IAED,qBAAI,GAAJ,UAAK,OAAe,EAAE,IAAwB;QAAxB,gCAAwB;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,kBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;IAC5G,CAAC;IAED,qBAAI,GAAJ,UAAK,OAAe,EAAE,IAAwB;QAAxB,gCAAwB;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,kBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;IAC5G,CAAC;IAED,sBAAK,GAAL,UAAM,OAAe,EAAE,IAAwB;QAAxB,gCAAwB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,kBAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAE,CAAC;IAC7G,CAAC;IAED,sBAAK,GAAL,UAAM,OAAe,EAAE,IAAwB;QAAxB,gCAAwB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,kBAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAE,CAAC;IAC7G,CAAC;IAED;;OAEG;IACI,cAAO,GAAd;QACI,OAAO,IAAI,aAAa,EAAE,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACI,YAAG,IAAV,UAAW,IAAc;QACrB,IAAM,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;QACpC,OAAO,CAAC,MAAM,CAAC,MAAI,IAAI,CAAC,IAAI,SAAM,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACnB,CAAC;IAEL,aAAC;AAAD,CAAC;AAjDY,wBAAM;AAmDnB;IAAA;QAEoB,aAAQ,GAAmB,IAAI,gCAAc,EAAE,CAAC;IAiEpE,CAAC;IA/DG;;;OAGG;IACH,gCAAQ,GAAR,UAAS,KAAqB;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,iCAAS,GAAT;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,8CAAoB,EAAE,CAAC,CAAC;IACrD,CAAC;IAED;;;OAGG;IACH,8BAAM,GAAN,UAAO,MAA6B;QAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,4CAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACH,8BAAM,GAAN,UAAO,SAA6B;QAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,mCAAoB,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;;OAGG;IACH,4BAAI,GAAJ,UAAK,SAAoB;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,gCAAQ,GAAR,UAAS,eAAyB;QAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,kCAAmB,CAAC,eAAe,CAAC,CAAC,CAAC;IACnE,CAAC;IAED;;OAEG;IACH,mCAAW,GAAX;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,2CAAiB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,6BAAK,GAAL;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEL,oBAAC;AAAD,CAAC;AAnEY,sCAAa;;;;;;;;;;;;;ACtGb;;;;;;;;;;;;;;;AAKb;;GAEG;AACH;IAAA;IAQA,CAAC;IANG,6BAAO,GAAP,UAAQ,QAAmB;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YAAE,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAGL,kBAAC;AAAD,CAAC;AARqB,kCAAW;AAWjC;;GAEG;AACH;IAA0C,wCAAW;IAIjD,8BAAY,SAA6B;QAAzC,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAC/B,CAAC;IAED,qCAAM,GAAN,UAAO,KAAgB;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEL,2BAAC;AAAD,CAAC,CAbyC,WAAW,GAapD;AAbY,oDAAoB;AAejC;;;GAGG;AACH;IAAyC,uCAAW;IAIhD,6BAAY,eAAyB;QAArC,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;;IACvC,CAAC;IAED,oCAAM,GAAN,UAAO,KAAgB;QACnB,OAAO,KAAK,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC;IAC7C,CAAC;IAEL,0BAAC;AAAD,CAAC,CAbwC,WAAW,GAanD;AAbY,kDAAmB;;;;;;;;;;;;;ACzCnB;;AAIb,+FAAkD;AAClD,8HAA+I;AAG/I;;GAEG;AACH;IAII,4BAAY,MAA6B;QACrC,IAAI,CAAC,MAAM,GAAG,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAM,aAAM,EAAN,CAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IACvE,CAAC;IAED,oCAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,0CAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEL,yBAAC;AAAD,CAAC;AAZY,gDAAkB;AAc/B;;GAEG;AACH;IAII,4BAAY,MAA6B;QACrC,IAAI,CAAC,MAAM,GAAG,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAM,aAAM,EAAN,CAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IACvE,CAAC;IAED,oCAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,0CAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEL,yBAAC;AAAD,CAAC;AAZY,gDAAkB;AAc/B;;GAEG;AACH;IAII,8BAAY,MAA2B;QAA3B,4CAA2B;QACnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,QAAmB;QAA3B,iBAMC;QALG,IAAM,uBAAuB,GAAG;YAC5B,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;YACxD,OAAO,8BAAa,CAAC,MAAM,CAAC,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;QAC9D,CAAC,CAAC;QACF,OAAO,OAAO,CAAC,OAAO,CAAE,IAAI,0CAAsB,CAAC,QAAQ,EAAE,uBAAuB,CAAC,CAAE,CAAC;IAC5F,CAAC;IAEL,2BAAC;AAAD,CAAC;AAhBY,oDAAoB;AAkBjC;;;GAGG;AACH;IAAA;IAMA,CAAC;IAJG,mCAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,gDAA4B,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvE,CAAC;IAEL,wBAAC;AAAD,CAAC;AANY,8CAAiB;;;;;;;;;;;;;ACnElB;;;;;;;;;;;;;;;AAEZ,0EAAiD;AAGjD;IAAA;IAMA,CAAC;IALG,2BAAO,GAAP,UAAQ,QAAmB;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAM,eAAQ,EAAR,CAAQ,CAAC,CAAC;IACrD,CAAC;IAGL,gBAAC;AAAD,CAAC;AANqB,8BAAS;AAQ/B;;GAEG;AACH;IAAsC,oCAAS;IAA/C;;IAuCA,CAAC;IArCG,gCAAK,GAAL,UAAM,KAAgB;QAClB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEhC,QAAO,KAAK,CAAC,KAAK,EAAE,EAAE;YAClB,KAAK,kBAAQ,CAAC,KAAK;gBACnB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC9B,MAAM;YAEN,KAAK,kBAAQ,CAAC,IAAI;gBAClB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC5B,MAAM;YAEN,KAAK,kBAAQ,CAAC,IAAI;gBAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC7B,MAAM;YAEN,KAAK,kBAAQ,CAAC,KAAK,CAAC;YACpB,KAAK,kBAAQ,CAAC,KAAK;gBACnB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SACjC;QAED,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED;;OAEG;IACK,oCAAS,GAAjB;QACI,IAAM,IAAI,GAAG,cAAa,CAAC,CAAC;QAC5B,OAAO;YACH,GAAG,EAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACxC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACxE,IAAI,EAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACtE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC3E,CAAC;IACN,CAAC;IAEL,uBAAC;AAAD,CAAC,CAvCqC,SAAS,GAuC9C;AAvCY,4CAAgB;AAyC7B;;GAEG;AACH;IAAmC,iCAAS;IAA5C;;IAOA,CAAC;IALG,6BAAK,GAAL,UAAM,KAAgB;QAClB,0BAA0B;QAC1B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IAEL,oBAAC;AAAD,CAAC,CAPkC,SAAS,GAO3C;AAPY,sCAAa;;;;;;;;;;;;;AC5Db;;AAEb;;GAEG;AACH;IAUI,uBAAY,GAAW;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,8BAAM,GAAN,UAAO,IAAU;QACb,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,yBAAyB;QACzB,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QAEtE,+BAA+B;QAC/B,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;QAExE,YAAY;QACZ,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAErE,yCAAyC;QACzC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAE1E,gDAAgD;QAChD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;QACxE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAEhF,6BAA6B;QAC7B,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAC3E,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAE3E,+BAA+B;QAC/B,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAE3E,+BAA+B;QAC/B,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAE3E,OAAO,YAAY,CAAC;IACxB,CAAC;IAEO,0CAAkB,GAA1B,UAA2B,IAAU;QACjC,OAAO,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,yCAAiB,GAAzB,UAA0B,IAAU;QAChC,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7C,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,IAAU;QAC/B,OAAO,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;IAEO,uCAAe,GAAvB,UAAwB,IAAU;QAC9B,OAAO,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,CAAC;IAEO,sCAAc,GAAtB,UAAuB,IAAU;QAC7B,OAAO,KAAG,IAAI,CAAC,WAAW,EAAI,CAAC;IACnC,CAAC;IAEO,mCAAW,GAAnB,UAAoB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACnD,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,CAAC,OAAO,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO,CAAC;IAC9D,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACxD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,OAAO,CAAC,OAAO,IAAI,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,UAAY,CAAC,CAAC,CAAC,KAAG,UAAY,CAAC;IAC7E,CAAC;IAEO,oCAAY,GAApB,UAAqB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,OAAO,CAAC,OAAO,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM,CAAC;IAC3D,CAAC;IAEO,oCAAY,GAApB,UAAqB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,OAAO,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM,CAAC;IAC3D,CAAC;IAEO,oCAAY,GAApB,UAAqB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACpD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,OAAO,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,MAAQ,CAAC,CAAC,CAAC,KAAG,MAAQ,CAAC;IACjE,CAAC;IAEO,oCAAY,GAApB,UAAqB,IAAU,EAAE,OAAuB;QAAvB,wCAAuB;QACpD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,OAAO,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAI,MAAQ,CAAC,CAAC,CAAC,KAAG,MAAQ,CAAC;IACjE,CAAC;IAEM,oBAAM,GAAb,UAAc,IAAU,EAAE,GAAW;QACjC,IAAM,SAAS,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IArGuB,oBAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACrI,0BAAY,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,eAAK,IAAI,YAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAErE,kBAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IACrF,wBAAU,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAmGzF,oBAAC;CAAA;AA3GY,sCAAa","file":"kiokiru.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Kiokiru\"] = factory();\n\telse\n\t\troot[\"Kiokiru\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","'use strict';\n\nimport { ILogEvent, LogLevel, ILogEventPredicate } from \"../ilogger\";\nimport { LogEventDecorator } from \"../log-event-decorator\";\n\n/**\n * Overrides the ILogEvent's LogLevel\n */\nexport class LevelOverrideDecorator extends LogEventDecorator {\n\n    private levelOverride: LogLevel;\n\n    constructor(event: ILogEvent, level: LogLevel) {\n        super(event);\n        this.levelOverride = level;\n    }\n\n    level(): LogLevel {\n        return this.levelOverride;\n    }\n}\n\n/**\n * Conditionally overrides the ILogEvent's LogLevel\n */\nexport class ConditionalLevelDecorator extends LogEventDecorator {\n\n    private levelOverride: LogLevel;\n    private overridePredicate: ILogEventPredicate;\n\n    constructor(event: ILogEvent, level: LogLevel, predicate: ILogEventPredicate) {\n        super(event);\n        this.levelOverride = level;\n        this.overridePredicate = predicate;\n    }\n\n    level(): LogLevel {\n        if (this.overridePredicate(this.event)) return this.levelOverride;\n        return this.event.level();\n    }\n\n}","'use strict';\n\nimport { LogEventDecorator } from \"../log-event-decorator\";\nimport { ILogEvent } from \"../ilogger\";\n\nexport interface StringProvider {\n    (): string;\n}\n\n\nexport class MessagePrefixDecorator extends LogEventDecorator {\n\n    private prefixProvider: StringProvider;\n\n    constructor(event: ILogEvent, prefixProvider: StringProvider) {\n        super(event);\n        this.prefixProvider = prefixProvider;\n    }\n\n    message(): string {\n        return `${this.prefixProvider()}${this.event.message()}`;\n    }\n}\n\n\nexport class MessageSuffixDecorator extends LogEventDecorator {\n\n    private suffixProvider: StringProvider;\n\n    constructor(event: ILogEvent, suffixProvider: StringProvider) {\n        super(event);\n        this.suffixProvider = suffixProvider;\n    }\n\n    message(): string {\n        return `${this.event.message()}${this.suffixProvider()}`;\n    }\n\n}\n\nexport class MessageDataInjectorDecorator extends LogEventDecorator {\n\n    message(): string {\n        const eventData = this.event.data();\n        const eventMessage = this.event.message();\n        let outputMessage = eventMessage;\n\n        const variableRegex = /\\{([^}]+)\\}/g;\n        let match: RegExpExecArray = null;\n\n        while((match = variableRegex.exec(eventMessage)) != null) {\n            const propertyName = match[1].trim();\n            if (eventData[propertyName] != null) {\n                outputMessage = outputMessage.replace(match[0], eventData[propertyName]);\n            }\n        }\n\n        return outputMessage;\n    }\n\n}","'use strict'\n\nexport enum LogLevel {\n    DEBUG,\n    INFO,\n    WARN,\n    ERROR,\n    FATAL\n}\n\nexport interface ILogEventPredicate {\n    (event: ILogEvent): boolean;\n}\n\nexport interface ILogEventData  {\n    [index:string]:any;\n}\n\n/**\n * Base interface for a log events\n */\nexport interface ILogEvent {\n    timestamp(): number,\n    message(): string,\n    level(): LogLevel,\n    data(): ILogEventData,\n}\n\n/**\n * An ILogger logs things...\n */\nexport interface ILogger {\n    /**\n     * Log a debug message. \n     * @param message the message that has to be logged\n     * @param options extra options object that accomponies the message\n     */\n    debug(message: string, data: ILogEventData): void;\n\n    /**\n     * Log an info message.\n     * @param message the message that has to be logged\n     * @param options extra options object that accomponies the message\n     */\n    info(message: string, data: ILogEventData): void;\n\n    /**\n     * Log a warning message. \n     * @param message the message that has to be logged\n     * @param options extra options object that accomponies the message\n     */\n    warn(message: string, data: ILogEventData): void;\n\n    /**\n     * Log an error message. \n     * @param message the message that has to be logged\n     * @param options extra options object that accomponies the message\n     */\n    error(message: string, data: ILogEventData): void;\n\n    /**\n     * Log a fatal message.\n     * @param message the message that has to be logged\n     * @param options extra options object that accompanies the message\n     */\n    fatal(message: string, data: ILogEventData):  void;\n}\n","'use strict';\n\nexport * from './ilogger';\nexport * from './logger-pipeline';\nexport * from './logger';\n\nexport * from './stages/sink-stage';\nexport * from './stages/message-formatter-stage';\nexport * from './stages/filter-stage';\n\nexport * from './decorators/message-decorator';\nexport * from './decorators/level-decorator';\n","'use strict';\n\nimport { ILogEvent, ILogEventData, LogLevel } from './ilogger';\n\nexport abstract class LogEventDecorator implements ILogEvent {\n    protected event: ILogEvent;\n\n    constructor(event: ILogEvent) {\n        this.event = event;\n    }\n\n    timestamp(): number {\n        return this.event.timestamp();\n    }\n\n    message(): string {\n        return this.event.message();\n    }\n\n    level(): LogLevel {\n        return this.event.level();\n    }\n\n    data(): ILogEventData {\n        return this.event.data();\n    }\n}","'use strict';\n\nimport { ILogEvent } from './ilogger';\n\nexport interface IPipelineStage {\n     process(logEvent:  ILogEvent): Promise<ILogEvent>\n}\n\nexport class LoggerPipeline implements IPipelineStage {\n    private stages: IPipelineStage[] = [];\n\n    addStage(stage: IPipelineStage): void {\n        this.stages.push(stage);\n    }\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return this.stages.reduce(\n            function(acc, nextStage) {\n                return acc.then((nextEvent) => {\n                    if (nextEvent != null) return nextStage.process(nextEvent);\n                    return null;\n                });\n            },\n            Promise.resolve(logEvent)\n        );\n    }\n}","'use strict'\n\nimport { ILogEvent, ILogger, ILogEventData, LogLevel, ILogEventPredicate } from './ilogger';\nimport { IPipelineStage, LoggerPipeline } from './logger-pipeline';\nimport { SinkStage } from './stages/sink-stage';\nimport { StringProvider } from './decorators/message-decorator';\nimport { MessagePrefixStage, TimestampPrefixStage,DataInjectorStage } from './stages/message-formatter-stage';\nimport { PredicateFilterStage, LogLevelFilterStage } from './stages/filter-stage';\nimport { LogEventDecorator } from './log-event-decorator';\n\n/**\n * Base ILogEvent implementation.\n */\nexport class LogEvent implements ILogEvent {\n\n    private _timestamp: number;\n    private _message: string;\n    private _level: LogLevel;\n    private _data: ILogEventData;\n\n    constructor(timestamp: number, message: string, level: LogLevel, data: ILogEventData) {\n        this._timestamp = timestamp;\n        this._message = message;\n        this._level = level;\n        this._data = data;\n    }\n\n    timestamp(): number {\n        return this._timestamp;\n    }  \n    \n    message(): string {\n        return this._message;\n    }\n\n    level(): LogLevel {\n        return this._level;\n    }\n\n    data(): ILogEventData {\n        return this._data;\n    }\n}\n\n/**\n * Pipeline based ILogger implementation. Every logged message passes through a pipeline of IPipelineStage stages.\n * Each stage passes the event along (or null to filter it out). IPipelineStages are allowed modify / decorate the ILogEvents\n * before returning them.\n * \n * All Logger instances are IPipelineStages as well. Note that they will always return the original ILogEvent when they have finished processing it.\n */\nexport class Logger implements ILogger, IPipelineStage {\n\n    private pipeline: LoggerPipeline;\n\n    constructor(pipeline: LoggerPipeline) {\n        this.pipeline = pipeline;\n    }\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return this.pipeline.process(logEvent).then(() => logEvent);\n    }\n\n    debug(message: string, data: ILogEventData = {}): void {\n        this.process(new LogEvent( Math.round((new Date()).getTime() / 1000.0), message, LogLevel.DEBUG, data) );\n    }\n\n    info(message: string, data: ILogEventData = {}): void {\n        this.process(new LogEvent( Math.round((new Date()).getTime() / 1000.0), message, LogLevel.INFO, data) );\n    }\n\n    warn(message: string, data: ILogEventData = {}): void {\n        this.process(new LogEvent( Math.round((new Date()).getTime() / 1000.0), message, LogLevel.WARN, data) );\n    }\n\n    error(message: string, data: ILogEventData = {}): void {\n        this.process(new LogEvent( Math.round((new Date()).getTime() / 1000.0), message, LogLevel.ERROR, data) );\n    }\n\n    fatal(message: string, data: ILogEventData = {}): void {\n        this.process(new LogEvent( Math.round((new Date()).getTime() / 1000.0), message, LogLevel.FATAL, data) );\n    }\n\n    /**\n     * Utility method that creates an empty LoggerBuilder\n     */\n    static builder(): LoggerBuilder {\n        return new LoggerBuilder();\n    }\n\n    /**\n     * Utility method that creates a LoggerBuilder that has a pre-configured MessagePrefixStage that prefixes all messages with the provided type's name\n     * @param type the type that which name needs to be prefixed\n     */\n    static for(type: Function): LoggerBuilder {\n        const builder = new LoggerBuilder();\n        builder.prefix(`[${type.name}] - `);\n        return builder;\n    }\n\n}\n\nexport class LoggerBuilder {\n\n    public readonly pipeline: LoggerPipeline = new LoggerPipeline();\n\n    /**\n     * Adds a stage to the pipeline\n     * @param stage\n     */\n    addStage(stage: IPipelineStage): LoggerBuilder {\n        this.pipeline.addStage(stage);\n        return this;\n    }\n\n    /**\n     * Adds a {TimestampFormatterStage} to the pipeline for the logger that's being built.\n     */\n    timestamp(): LoggerBuilder  {\n        return this.addStage(new TimestampPrefixStage());\n    }\n\n    /**\n     * Adds a {MessagePrefixStage} that adds the provided prefix ({string} or {StringProvider}) to the pipeline for the logger that's being built.\n     * @param prefix\n     */\n    prefix(prefix: string|StringProvider): LoggerBuilder {\n        return this.addStage(new MessagePrefixStage(prefix));\n    }\n\n    /**\n     * Adds an {PredicateFilterStage} with the provided predicate to the pipeline for the logger that's being built.\n     * @param predicate\n     */\n    filter(predicate: ILogEventPredicate): LoggerBuilder {\n        return this.addStage(new PredicateFilterStage(predicate));\n    }\n\n    /**\n     * Adds a {SinkStage} to the pipeline for the logger that's being built.\n     * @param sink \n     */\n    sink(sinkStage: SinkStage): LoggerBuilder {\n        return this.addStage(sinkStage);\n    }\n\n    /**\n     * Adds a {LogLevelFilterStage} to the pipeline for the logger that's being built.\n     * This will filter out all ILogEvents that have a {LogLevel} lower than the provided one.\n     * @param minimumLogLevel \n     */\n    logLevel(minimumLogLevel: LogLevel): LoggerBuilder {\n        return this.addStage(new LogLevelFilterStage(minimumLogLevel));\n    }\n\n    /**\n     * Adds a {DataFormatterStage} which will try to replace \"{...}\" sequences with values from the ILogEventData dictionary\n     */\n    includeData(): LoggerBuilder {\n        return this.addStage(new DataInjectorStage());\n    }\n\n    /**\n     * Builds the logger with the configured pipeline\n     */\n    build(): Logger {\n        return new Logger(this.pipeline);\n    }\n\n}\n\n","'use strict';\n\nimport { ILogEvent, LogLevel, ILogEventPredicate } from '../ilogger';\nimport { IPipelineStage } from \"../logger-pipeline\";\n\n/**\n * Filters out ILogEvents from the pipeline\n */\nexport abstract class FilterStage implements IPipelineStage {\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        if (!this.filter(logEvent)) return Promise.resolve(null);\n        return Promise.resolve(logEvent);\n    }\n\n    abstract filter(event: ILogEvent): boolean;\n}\n\n\n/**\n * Filters out ILogEvents that  do not match the configured predicate.\n */\nexport class PredicateFilterStage extends FilterStage {\n\n    private predicate: ILogEventPredicate;\n\n    constructor(predicate: ILogEventPredicate) {\n        super();\n        this.predicate = predicate;\n    }\n\n    filter(event: ILogEvent): boolean {\n        return this.predicate(event);\n    }\n\n}\n\n/**\n * Filters out ILogEvents with a LogLevel lower than its configured level\n * e.g. when minLogLevel is configured to ERROR messages with level DEBUG, INFO and WARN are filtered out and only ERROR and FATAL are passed along\n */\nexport class LogLevelFilterStage extends FilterStage {\n\n    private minLogLevel: LogLevel;\n\n    constructor(minimumLogLevel: LogLevel) {\n        super();\n        this.minLogLevel = minimumLogLevel;\n    }\n\n    filter(event: ILogEvent): boolean {\n        return event.level() >= this.minLogLevel;\n    }\n\n}\n","'use strict';\n\nimport { ILogEvent } from '../ilogger';\nimport { IPipelineStage } from \"../logger-pipeline\";\nimport { TimeFormatter } from '../time-formatter';\nimport { StringProvider, MessagePrefixDecorator, MessageSuffixDecorator, MessageDataInjectorDecorator } from '../decorators/message-decorator';\n\n\n/**\n * Prefixes the ILogEvent message with the configured string/StringProvider output\n */\nexport class MessagePrefixStage implements IPipelineStage {\n\n    private prefix: StringProvider;\n\n    constructor(prefix: string|StringProvider) {\n        this.prefix = (typeof prefix === 'string') ? () => prefix : prefix;\n    }\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return Promise.resolve(new MessagePrefixDecorator(logEvent, this.prefix));\n    }\n\n}\n\n/**\n * Suffixes the ILogEventt message with the configured string/StringProvider output\n */\nexport class MessageSuffixStage implements IPipelineStage {\n\n    private suffix: StringProvider;\n\n    constructor(suffix: string|StringProvider) {\n        this.suffix = (typeof suffix === 'string') ? () => suffix : suffix;\n    }\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return Promise.resolve(new MessageSuffixDecorator(logEvent, this.suffix));\n    }\n\n}\n\n/**\n * Prefixes the ILogEvent message with its timestamp using {TimeFormatter}. The format defaults to '%H:%M:%S'\n */\nexport class TimestampPrefixStage implements IPipelineStage {\n\n    private format: string;\n\n    constructor(format: string = '%H:%M:%S') {\n        this.format = format;\n    }\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        const timestampPrefixProvider = (): string => {\n            const eventDate = new Date(logEvent.timestamp() * 1000);\n            return TimeFormatter.format(eventDate, this.format) + ' ';\n        };\n        return Promise.resolve( new MessagePrefixDecorator(logEvent, timestampPrefixProvider) );\n    }\n\n}\n\n/**\n * Replaces all {key} occurences within the ILogEvent message with its ILogEvent.data()[key] values.\n * If the key is not present in the ILogEvent data the occurence will not be replaced\n */\nexport class DataInjectorStage implements IPipelineStage {\n\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return Promise.resolve(new MessageDataInjectorDecorator(logEvent));\n    }\n\n}","'use strict'\n\nimport { ILogEvent, LogLevel } from '../ilogger';\nimport { IPipelineStage } from \"../logger-pipeline\";\n\nexport abstract class SinkStage implements IPipelineStage {\n    process(logEvent: ILogEvent): Promise<ILogEvent> {\n        return this.write(logEvent).then(() => logEvent);\n    }\n\n    abstract write(event: ILogEvent): Promise<void>;\n}\n\n/**\n * Your straightforward \"write stuff to the console\" sink\n */\nexport class ConsoleSinkStage extends SinkStage {\n\n    write(event: ILogEvent): Promise<void> {\n        const writer = this.getWriter();\n\n        switch(event.level()) {\n            case LogLevel.DEBUG:\n            writer.debug(event.message());\n            break;\n\n            case LogLevel.INFO:\n            writer.log(event.message());\n            break;\n\n            case LogLevel.WARN:\n            writer.warn(event.message());\n            break;\n\n            case LogLevel.ERROR:\n            case LogLevel.FATAL:\n            writer.error(event.message());\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Gets a \"valid\" console writer (with some fallback handling).\n     */\n    private getWriter(): Partial<Console> {\n        const stub = (): void => {};\n        return {\n            log:   (!console ? stub : (console.log)),\n            debug: (!console ? stub : (console.debug ? console.debug : console.log)),\n            warn:  (!console ? stub : (console.warn ? console.warn : console.log)),\n            error: (!console ? stub : (console.error ? console.error : console.log))\n        };\n    }\n\n}\n\n/**\n * A generic \"POST logging messages to a remote server\" sink\n */\nexport class RestSinkStage extends SinkStage {\n\n    write(event: ILogEvent): Promise<void> {\n        // TODO: Implement this...\n        throw new Error(\"Method not implemented.\");\n    }\n\n}","'use strict';\n\n/**\n * Simple default TimeFormatter used in the interal TimestampPrefixDecorator\n */\nexport class TimeFormatter {\n\n    private fmt: string;\n\n    private static readonly MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'Octorber', 'November', 'December'];\n    private static readonly MONTHS_SHORT = TimeFormatter.MONTHS.map(month => month.substr(0, 3));\n\n    private static readonly DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursay', 'Friday', 'Saturday'];\n    private static readonly DAYS_SHORT = TimeFormatter.DAYS.map(day => day.substr(0, 3));\n\n    constructor(fmt: string) {\n        this.fmt = fmt;\n    }\n\n    format(date: Date): string {\n        let outputString = this.fmt;\n        // month names short/long\n        outputString = outputString.replace('%b', this.formatShortMonth(date));\n        outputString = outputString.replace('%B', this.formatLongMonth(date));\n\n        // day of week names short/long\n        outputString = outputString.replace('%a', this.formatShortWeekday(date));\n        outputString = outputString.replace('%A', this.formatLongWeekday(date));\n\n        // full year\n        outputString = outputString.replace('%Y', this.formatFullYear(date));\n\n        // month 01..12 only zero/non-zero padded\n        outputString = outputString.replace('%m', this.formatMonth(date));\n        outputString = outputString.replace('%_m', this.formatMonth(date, false));\n\n        // day of month 1..28/30/31 zero/non-zero padded\n        outputString = outputString.replace('%d',  this.formatDayOfMonth(date));\n        outputString = outputString.replace('%_d',  this.formatDayOfMonth(date, false));\n\n        // hours zero/non-zero padded\n        outputString = outputString.replace('%H', this.formatHour24(date));\n        outputString = outputString.replace('%_H', this.formatHour24(date, false));\n        outputString = outputString.replace('%I', this.formatHour12(date));\n        outputString = outputString.replace('%_I', this.formatHour12(date, false));\n\n        // minutes zero/non-zero padded\n        outputString = outputString.replace('%M', this.formatMinute(date));\n        outputString = outputString.replace('%_M', this.formatMinute(date, false));\n\n        // seconds zero/non-zero padded\n        outputString = outputString.replace('%S', this.formatSecond(date));\n        outputString = outputString.replace('%_S', this.formatSecond(date, false));\n\n        return outputString;\n    }\n\n    private formatShortWeekday(date: Date): string {\n        return TimeFormatter.DAYS_SHORT[date.getDay()];\n    }\n\n    private formatLongWeekday(date: Date): string {\n        return TimeFormatter.DAYS[date.getDay()];\n    }\n\n    private formatShortMonth(date: Date): string {\n        return TimeFormatter.MONTHS_SHORT[date.getMonth()];\n    }\n\n    private formatLongMonth(date: Date): string {\n        return TimeFormatter.MONTHS[date.getMonth()];\n    }\n\n    private formatFullYear(date: Date): string {\n        return `${date.getFullYear()}`;\n    }\n\n    private formatMonth(date: Date, zeroPad: boolean = true): string {\n        let month = date.getMonth() + 1;\n        return (zeroPad && month < 10) ? `0${month}` : `${month}`;\n    }\n\n    private formatDayOfMonth(date: Date, zeroPad: boolean = true): string {\n        let dayOfMonth = date.getDate();\n        return (zeroPad && dayOfMonth < 10) ? `0${dayOfMonth}` : `${dayOfMonth}`;\n    }\n\n    private formatHour24(date: Date, zeroPad: boolean = true): string {\n        let hour = date.getHours();\n        return (zeroPad && hour < 10) ? `0${hour}` : `${hour}`;\n    }\n\n    private formatHour12(date: Date, zeroPad: boolean = true): string {\n        let hour = Math.floor(date.getHours() / 12);\n        return (zeroPad && hour < 10) ? `0${hour}` : `${hour}`;\n    }\n\n    private formatMinute(date: Date, zeroPad: boolean = true): string {\n        let minute = date.getMinutes();\n        return (zeroPad && minute < 10) ? `0${minute}` : `${minute}`;\n    }\n\n    private formatSecond(date: Date, zeroPad: boolean = true): string {\n        let second = date.getSeconds(); \n        return (zeroPad && second < 10) ? `0${second}` : `${second}`;\n    }\n\n    static format(date: Date, fmt: string): string {\n        const formatter = new TimeFormatter(fmt);\n        return formatter.format(date);\n    }\n\n}"],"sourceRoot":""}